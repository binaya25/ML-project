import cv2
import numpy as np
import os

training_data_path = 'path_to_training_data_folder'
recognizer = cv2.face.LBPHFaceRecognizer_create()
detector = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

def get_images_and_labels(path):
    image_paths = [os.path.join(path, f) for f in os.listdir(path)]
    face_samples = []
    ids = []

    for image_path in image_paths:
        image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
        face_id = int(os.path.split(image_path)[-1].split(".")[1])

        faces = detector.detectMultiScale(image)

        for (x, y, w, h) in faces:
            face_samples.append(image[y:y + h, x:x + w])
            ids.append(face_id)

    return face_samples, ids

faces, ids = get_images_and_labels(training_data_path)
recognizer.train(faces, np.array(ids))
recognizer.save('trained_model.yml')
